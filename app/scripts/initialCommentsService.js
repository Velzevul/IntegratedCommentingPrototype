angular.module('comments')
  .factory('InitialCommentsService', function(ContextualCommentsService, SelectionService) {
    'use strict';

    return {
        addRandomComments: function(){
          var paragraphs = document.getElementsByTagName("p"),
              range = document.createRange(),
              insertPosition,
              paragraphTextlength,
              textLength, textOffset,
              h,
              //variables for determining length of comment content
              start, end, finalComment,
              //number of comments generated by paragraph
              commentNumber,
              contentHolder ="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a tincidunt odio, eget tristique tortor. Cras sagittis libero sed euismod ultrices. Nam in gravida erat, eget fringilla ante. Etiam bibendum mi interdum, efficitur enim vitae, vestibulum augue. Maecenas ligula turpis, bibendum et tortor non, feugiat fringilla purus. Integer sed tortor et massa accumsan efficitur. Suspendisse elementum lacinia magna, a lobortis arcu vehicula eu. Donec ut augue ac lectus volutpat ullamcorper id ac libero. Phasellus porta magna ut eros lobortis, eget maximus leo interdum. Integer tempor mauris vestibulum libero hendrerit, ut mollis tellus pulvinar. Nulla facilisi. Curabitur molestie mauris urna, id cursus turpis tristique ac. Aenean nec dignissim urna, at faucibus dui. Proin porttitor varius diam non porttitor. Integer blandit luctus nisl id dignissim. Nam lacinia lectus purus, vel vehicula ex ullamcorper sit amet.";

          //iterates through each paragraph and adds currentNumber of random comments
          for(var i = 0; i < paragraphs.length; i++){
            paragraphTextlength = paragraphs[i].textContent.length;
            commentNumber = Math.floor( ( Math.random() *  12 ) + 3 ) ;
            for(var j = 0; j < commentNumber; j++){
              h = 0;
              textOffset = 0;
              textLength = paragraphs.item(i).childNodes[h].length;
              insertPosition = Math.floor( ( Math.random() *  paragraphTextlength ) + 1 ) ;

              while( textLength < insertPosition){
                h++;
                textOffset = textLength;

                if( paragraphs.item(i).childNodes[h].nodeType === 3 ){
                  textLength += paragraphs.item(i).childNodes[h].length;

                } else {
                  textLength += paragraphs.item(i).childNodes[h].innerText.length
                }
              }

              if( paragraphs.item(i).childNodes[h].nodeType === 3 ){
                range.setStart(paragraphs.item(i).childNodes[h], insertPosition - textOffset);
              } else {
                if(paragraphs.item(i).childNodes[h].firstChild.length > insertPosition - textOffset){
                  range.setStart(paragraphs.item(i).childNodes[h].firstChild, insertPosition - textOffset);
                } else {
                  range.setStart(paragraphs.item(i).childNodes[h].firstChild, 0);
                }
              }

              if( paragraphs.item(i).childNodes[h].nodeType === 3 ){
                if(insertPosition - textOffset + 10 < paragraphs.item(i).childNodes[h].length ){
                  range.setEnd(paragraphs.item(i).childNodes[h], 10 + insertPosition - textOffset)
                }
                else{
                  range.setEnd(paragraphs.item(i).childNodes[h], paragraphs.item(i).childNodes[h].length)
                }
              } else {
                //it is inside an existing comment
                if(insertPosition - textOffset + 10 < paragraphs.item(i).childNodes[h].firstChild.length){
                  range.setEnd(paragraphs.item(i).childNodes[h].firstChild, 10 + insertPosition - textOffset)
                } else {
                  range.setEnd(paragraphs.item(i).childNodes[h].firstChild, paragraphs.item(i).childNodes[h].firstChild.length )
                }
              }

              SelectionService.initialRange(range);
              //will generate random values for these comments later on, or not really needed
              //as it is just a demonstration
              textLength = contentHolder.length;
              start = Math.floor( ( Math.random() *  textLength - 20 ) + 1 ) ;
              end = Math.floor( ( Math.random() *  textLength ) + 1 ) ;
              /*if( start > end ){  
                finalComment = contentHolder.substr(end, start);
              } else {
                finalComment = contentHolder.substr(start, end);
              }*/
              end = start + 20;
              finalComment = contentHolder.substring(start, end);
              ContextualCommentsService.create(finalComment, false, null);
            }
          }
        }
    };
  });
